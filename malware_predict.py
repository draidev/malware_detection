# ML
from malware_processing import *
import numpy as np
import pandas as pd

# util
from urllib.parse import urlparse
from datetime import datetime
import base64
import sys
import os


def run_malware_predict(model, info_path):
    print('start run malware predict !!')

    target_meta_path = info_path + '/exec.info'
    try:
        file = open(target_meta_path, "r")
    except OSError:
        print("Could not open file:", target_meta_path)
        return None

    with file:
        data = file.readlines()

    db_meta_data_list = list()

    for line in data:
        line_list = line.strip().split('^')
        url = urlparse(line_list[1])

        target_path = line_list[0]
        #print("target_path : {}".format(target_path))

        try:
            processed_exe_data = extract_infos(target_path)
            # print("\033[34m{}\033[0m".format(df))

            isencrypt = 0
            issensitive = 0
            ismalware =  malware_sentiment_predict(processed_exe_data, model, target_path)
            isstegano = 0

            if(issensitive or ismalware or isencrypt or isstegano):
                isnormal = 0
            else:
                isnormal = 1 
                
            db_meta_data_list.append((datetime.now().strftime('%Y-%m-%d %H:%M:%S'), line_list[2], line_list[1], line_list[4], line_list[3], line_list[5], line_list[6], line_list[7], issensitive, ismalware, isencrypt, isstegano, isnormal))
            #print("#db_meta_data_list : {}".format(db_meta_data_list))

        except Exception as e:
            print('Fail to load file_path !! ==> ' + target_path)
            print(e)

    file.close()

    return db_meta_data_list



def malware_sentiment_predict(exe_data, model, target_path):
    pe_features = list(map(lambda x : exe_data[x], model['malware']['feature']))
    result = model['malware']['model'].predict([pe_features])[0]
    if result == 1:
        print("\033[31mThe file {} is  malicious!! {}\033[0m".format(target_path, result))
        return 1 
    else:
        print("\033[31mThe file {} is legitimate!! {}\033[0m".format(target_path, result))
        return 0




